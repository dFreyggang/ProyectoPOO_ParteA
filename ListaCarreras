public class ListaCarreras {

    private Carrera listaCarreras[];

    //---------------------------------------CONSTRUCTOR---------------------------------------//
    public ListaCarreras (int cantCarreras) {
        this.listaCarreras = new Carrera[cantCarreras];
    }


//---------------------------------------METODOS CARRERA---------------------------------------//

    //BUSCAR CARRERA
    public boolean buscarCarrera (int codigoCarrera) {
        for (int i = 0; i < listaCarreras.length; i++) {
            if (listaCarreras[i] != null && listaCarreras[i].getCodigo() == codigoCarrera) {
                return true;
            }
        }
        return false;
    }

    //AGREGAR CARRERA
    public boolean agregarCarrera (int codigoCarrera, String nombreCarrera) {
        if (!buscarCarrera(codigoCarrera)) {
            for (int i = 0; i < listaCarreras.length; i++) {
                if (listaCarreras[i] == null) {
                    listaCarreras[i].setNombre(nombreCarrera);
                    return true;
                }
            }
        }
        return false;
    }

    //EDITAR CARRERA
    public boolean editarCarrera (int codigoCarrera, String nombreCarrera) {
        for (int i = 0; i < listaCarreras.length; i++) {
            if (listaCarreras[i] != null && listaCarreras[i].getCodigo() == codigoCarrera) {
                listaCarreras[i].setNombre(nombreCarrera);
                return true;
            }
        }
        return  false;
    }

    //ELIMINAR CARRERA
    public boolean eliminarCarrera (int codigoCarrera) {
        for (int i = 0; i < listaCarreras.length; i++) {
            if (listaCarreras[i] != null && listaCarreras[i].getCodigo() == codigoCarrera) {
                listaCarreras[i] = null;
                return true;
            }
        }
        return false;
    }

    //IMPRIMIR CARRERA
    public boolean mostrarCarreras(){
        for(int i=0 ; i < listaCarreras.length;i++){
            if (listaCarreras[i] != null) {
                System.out.println("        "+ listaCarreras[i].getCodigo() + "        "+listaCarreras[i].getNombre());
            }
        }
        return true;
    }

    //---------------------------------------METODOS ASIGNATURA POR CARRERA---------------------------------------//
    //AGREGAR ASIGNATURA
    public boolean agregarAsignatura(int codigoCarrera, int codigoAsignatura, String nombreAsignatura){
        for (int i=0 ; i<listaCarreras.length ; i++){
             if(listaCarreras[i].getCodigo() == codigoCarrera){
               return listaCarreras[i].agregarAsignatura(codigoAsignatura, nombreAsignatura);
             }
        }
        return false;
    }

    public boolean editarAsignatura(int codigoCarrera, int codigoAsignatura, String nombreAsignatura) {
        for (int i=0 ; i<listaCarreras.length ; i++){
            if (listaCarreras[i].getCodigo() == codigoCarrera){
                return listaCarreras[i].editarAsignatura(codigoAsignatura, nombreAsignatura);
            }
        }
        return false;
    }

    //ELIMINAR ASIGNATURA
    public boolean eliminarAsignatura(int codigoCarrera, int codigoAsignatura){
        for (int i=0 ; i<listaCarreras.length ; i++){
            if (listaCarreras[i].getCodigo() == codigoCarrera){
                return listaCarreras[i].eliminarAsignatura(codigoAsignatura);
            }
        }
        return false;
    }

    //MOSTRAR ASIGNATURAS
    public boolean mostrarAsignaturas(int codigoCarrera){
        for(int i=0 ; i < listaCarreras.length;i++){
            if (listaCarreras[i].getCodigo() == codigoCarrera) {
                return listaCarreras[i].mostrarAsignaturas();
            }
        }
        return true;
    }

    //---------------------------------------METODOS ALUMNO---------------------------------------//
//AGREGAR ALUMNO
    public boolean agregarAlumno (int codigoCarrera, int codigoAsignatura, String rut, String nombreAlumno) {
        for (int i=0 ; i<listaCarreras.length ; i++) {
            if(listaCarreras[i].getCodigo() == codigoCarrera) {
                return listaCarreras[i].agregarAlumno(codigoAsignatura, rut, nombreAlumno);
            }
        }
        return false;
    }

    //EDITAR ALUMNO
    public boolean editarAlumno (int codigoCarrera, int codigoAsignatura, String rut, String nombreAlumno) {
        for (int i=0 ; i<listaCarreras.length ; i++) {
            if (listaCarreras[i].getCodigo() == codigoCarrera) {
                return listaCarreras[i].editarAlumno(codigoAsignatura, rut, nombreAlumno);
            }
        }
        return false;
    }

    //ELIMINAR ALUMNO
    public boolean eliminarAlumno (int codigoCarrera, int codigoAsignatura, String rut) {
        for (int i=0 ; i<listaCarreras.length ; i++) {
            if (listaCarreras[i].getCodigo() == codigoCarrera) {
                return listaCarreras[i].eliminarAlumno(codigoAsignatura, rut);
            }
        }
        return false;
    }

    //MOSTRAR ALUMNOS
    public boolean mostrarAlumnos(int codigoCarrera, int codigoAsignatura){
        for(int i=0 ; i < listaCarreras.length;i++){
            if (listaCarreras[i].getCodigo() == codigoCarrera) {
                return listaCarreras[i].mostrarAlumnos(codigoAsignatura);
            }
        }
        return true;
    }

//---------------------------------------METODOS NOTA---------------------------------------//
//AGREGAR NOTA
    public boolean agregarNota (int codigoCarrera, int codigoAsignatura, String rut, double nuevaNota) {
        for (int i=0 ; i<listaCarreras.length ; i++){
            if(listaCarreras[i].getCodigo() == codigoCarrera){
                return listaCarreras[i].agregarNota(codigoAsignatura, rut, nuevaNota);
            }
        }
        return false;
    }

    //EDITAR NOTA
    public boolean editarNota (int codigoCarrera, int codigoAsignatura, String rut, double notaReferencia, double nuevaNota) {
        for (int i=0 ; i<listaCarreras.length ; i++){
            if(listaCarreras[i].getCodigo() == codigoCarrera){
                return listaCarreras[i].editarNota(codigoAsignatura, rut, notaReferencia, nuevaNota);
            }
        }
        return false;
    }

    //ELIMINAR NOTA
    public boolean eliminarNota (int codigoCarrera, int codigoAsignatura, String rut, double notaReferencia) {
        for (int i=0 ; i<listaCarreras.length ; i++){
            if(listaCarreras[i].getCodigo() == codigoCarrera){
                return listaCarreras[i].eliminarNota(codigoAsignatura, rut, notaReferencia);
            }
        }
        return false;
    }
}